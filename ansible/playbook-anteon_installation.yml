---

- name: 'Install Anteon (Self-Host community edition)'
  hosts: 'k3s1'
  gather_facts: true
  become: false
  module_defaults:
    kubernetes.core.helm:
      kubeconfig: './k3s-kubeconfig'
    kubernetes.core.k8s:
      kubeconfig: './k3s-kubeconfig'
    kubernetes.core.k8s_info:
      kubeconfig: './k3s-kubeconfig'

  tasks:

    - name: 'Create the anteon namespace'
      delegate_to: 'localhost'
      kubernetes.core.k8s:
        name: 'anteon'
        api_version: 'v1'
        kind: 'Namespace'
        state: 'present'

    - name: 'Install anteon via the helm chart'
      delegate_to: 'localhost'
      kubernetes.core.helm:
        chart_repo_url: 'https://getanteon.github.io/anteon-helm-charts/'
        chart_ref: 'anteon'
        release_name: 'anteon'
        release_namespace: 'anteon'
        release_values:
          alazBackend:
            replicas: 1
            celeryWorkerReplicas: 1
            celeryBeatReplicas: 1
            requestWriterReplicas: 1
          backend:
            replicas: 1
            celeryWorkerReplicas: 1
            celeryBeatReplicas: 1
          frontend:
            replicas: 1
          influxDB:
            replicas: 1
          hammer:
            replicas: 1
          hammerdebug:
            replicas: 1
          hammermanager:
            replicas: 1
            celeryWorkerReplicas: 1
            celeryBeatReplicas: 1
          postgres:
            replicas: 1
          prometheus:
            replicas: 1
          rabbitmq:
            replicas: 1
          redisBackend:
            replicas: 1
          redisAlazBackend:
            replicas: 1
          seaweedfs:
            replicas: 1
          service:
            replicas: 1
          ingress:
            enabled: true
            className: traefik
            hosts:
              - host: "anteon.{{ hostvars['k3s1']['ansible_default_ipv4']['address'] }}.sslip.io"
                paths:
                  - path: /
                    pathType: Prefix

    - name: 'Wait until all pods are running'
      delegate_to: 'localhost'
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Pod
        namespace: anteon
      register: pod_list
      until: |
        pod_list | json_query("resources[*].status.phase") | unique | sort == ["Running"]
        or
        pod_list | json_query("resources[*].status.phase") | unique | sort == ["Running", "Succeeded"]
      retries: 36
      delay: 10

    - name: 'Wait for the Anteon URL to be available'
      delegate_to: 'localhost'
      ansible.builtin.uri:
        url: "http://anteon.{{ hostvars['k3s1']['ansible_default_ipv4']['address'] }}.sslip.io"
        validate_certs: false
      register: result
      until: "result.status == 200"
      retries: 31
      delay: 10

    - name: 'Output Anteon URL'
      delegate_to: 'localhost'
      ansible.builtin.debug:
        msg: "The Anteon UI is reachable at http://anteon.{{ hostvars['k3s1']['ansible_default_ipv4']['address'] }}.sslip.io"
